---
name: single instance with TLS

on:
  workflow_dispatch:
  workflow_run:
    workflows:
      - "CI"
    types:
      - completed

defaults:
  run:
    working-directory: 'ansible-mariadb'

jobs:
  deb:
    name: "${{ matrix.image }} / ansible: ${{ matrix.ansible-version }}"
    runs-on: ubuntu-20.04
    if: ${{ github.event_name == 'schedule' || github.event.workflow_run.conclusion == 'success' }}
    strategy:
      fail-fast: false
      matrix:
        image:
          - debian:11
        ansible-version:
          - '6.7'
        scenario:
          - with-tls

    steps:
      - name: check out the codebase.
        uses: actions/checkout@v3
        with:
          path: 'ansible-mariadb'

      - name: set up python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r test-requirements.txt

      # See: https://github.com/geerlingguy/ansible-role-mysql/issues/422
      # - name: Disable AppArmor
      #   run: |
      #       set -x
      #       sudo apt-get install apparmor-profiles
      #       sudo ln -s /etc/apparmor.d/usr.sbin.mysqld /etc/apparmor.d/disable/
      #       sudo apparmor_parser -R /etc/apparmor.d/usr.sbin.mysqld

      - name: test with tox
        run: |
          make \
            test \
            -e TOX_SCENARIO="${{ matrix.scenario }}" \
            -e TOX_ANSIBLE="ansible_${{ matrix.ansible-version }}" \
            -e DISTRIBUTION="${{ matrix.image }}"
        env:
          PY_COLORS: '1'
          ANSIBLE_FORCE_COLOR: '1'
          DISTRIBUTION: ${{ matrix.image }}
