---

- name: create neccessary directories
  ansible.builtin.file:
    path: '{{ mariadb_config_dir }}/conf.d'
    state: directory
    owner: root
    group: root
    mode: 0755

- name: remove distribution directories
  ansible.builtin.file:
    path: "{{ mariadb_config_dir }}/mariadb.conf.d"
    state: absent

- name: TLS support
  when:
    - mariadb_config_mysqld | support_tls
  block:
    - name: copy certificates
      become: true
      mariadb_tls_certificates:
        source:
          ssl_cert: "{{ mariadb_tls_certificate.source_files.cert | default(omit) }}"
          ssl_key: "{{ mariadb_tls_certificate.source_files.key | default(omit) }}"
          ssl_ca: "{{ mariadb_tls_certificate.source_files.ca | default(omit) }}"
        destination: "{{ mariadb_config_mysqld | tls_directory }}"
        owner: mysql
        group: mysql

- name: detect '{{ mariadb_config_file }}'
  ansible.builtin.stat:
    path: "{{ mariadb_config_file }}"
  register: stat_mariadb_config_file

- name: d
  debug:
    msg: "{{ stat_mariadb_config_file.stat | default({}) }}"

# https://github.com/bodsch/ansible-mariadb/issues/20
- name: remove symlink to '{{ mariadb_config_file }}'
  ansible.builtin.file:
    state: absent
    path: "{{ mariadb_config_file }}"
  when:
    - stat_mariadb_config_file.stat is defined
    - stat_mariadb_config_file.stat.exists | default('false')
    - stat_mariadb_config_file.stat.islnk | default('false')

- name: create main configuration file
  ansible.builtin.template:
    src: "etc/my.cnf.j2"
    dest: "{{ mariadb_config_file }}"
    owner: root
    group: root
    mode: 0644
    backup: true

- name: create configuration files
  ansible.builtin.template:
    src: "etc/mysql/conf.d/mysql.cnf.j2"
    dest: "{{ mariadb_config_include_dir }}/mysql.cnf"
    owner: root
    group: root
    mode: 0644
    backup: true
  notify:
    - restart mariadb
    - check if mariadb are available

- name: create data directory '{{ mariadb_config_mysqld.datadir }}'
  ansible.builtin.file:
    path: "{{ mariadb_config_mysqld.datadir }}"
    state: directory
    owner: mysql
    group: mysql
    mode: 0755
  when:
    - mariadb_config_mysqld.datadir is defined
    - mariadb_config_mysqld.datadir != "/var/lib/mysql"

- name: create tmp directory '{{ mariadb_config_mysqld.tmpdir }}'
  ansible.builtin.file:
    path: "{{ mariadb_config_mysqld.tmpdir }}"
    state: directory
    owner: mysql
    group: mysql
    mode: 0755
  when:
    - mariadb_config_mysqld.tmpdir is defined
    - mariadb_config_mysqld.tmpdir != "/tmp"
    - mariadb_config_mysqld.tmpdir | length > 0

- name: create pid directory '{{ mariadb_config_mysqld["pid_file"] | dirname }}'
  ansible.builtin.file:
    path: "{{ mariadb_config_mysqld['pid_file'] | dirname }}"
    state: directory
    owner: mysql
    # group: mysql
    mode: 0755
  when:
    - mariadb_config_mysqld['pid-file'] is defined
    - mariadb_config_mysqld['pid-file'] | length > 0

- name: handle mariadb slow query log
  when:
    - mariadb_config_mysqld.slow_query_log_file is defined
    - mariadb_config_mysqld.slow_query_log_file | length > 0
  block:
    - name: create log directory '{{ mariadb_config_mysqld.slow_query_log_file | dirname }}'
      ansible.builtin.file:
        path: "{{ mariadb_config_mysqld.slow_query_log_file | dirname }}"
        state: directory
        owner: mysql
        group: adm
        mode: 0775

    - name: create slow query log file '{{ mariadb_config_mysqld.slow_query_log_file }}'
      ansible.builtin.file:
        path: "{{ mariadb_config_mysqld.slow_query_log_file }}"
        state: touch
        owner: mysql
        group: mysql
        mode: 0666
      changed_when: false

    - name: set ownership on slow query log file
      ansible.builtin.file:
        path: "{{ mariadb_config_mysqld.slow_query_log_file }}"
        state: file
        owner: mysql
        group: mysql
        mode: 0666

- name: handle mariadb error log
  when:
    - mariadb_config_mysqld.log_error is defined
    - mariadb_config_mysqld.log_error | length > 0
  block:
    - name: create log directory '{{ mariadb_config_mysqld.log_error | dirname }}'
      ansible.builtin.file:
        path: "{{ mariadb_config_mysqld.log_error | dirname }}"
        state: directory
        owner: mysql
        group: adm
        mode: 0775

    - name: create error log file '{{ mariadb_config_mysqld.log_error }}'
      ansible.builtin.file:
        path: "{{ mariadb_config_mysqld.log_error }}"
        state: touch
        owner: mysql
        group: mysql
        mode: 0666
      changed_when: false

    - name: set ownership on error log file
      ansible.builtin.file:
        path: "{{ mariadb_config_mysqld.log_error }}"
        state: file
        owner: mysql
        group: mysql
        mode: 0666

- name: configure swappiness
  ansible.posix.sysctl:
    name: vm.swappiness
    value: "{{ mariadb_swappiness | int }}"
    state: present
  when:
    - mariadb_configure_swappiness | bool

- name: run bootstrap for archlinux
  mariadb_bootstrap:
    datadir: /var/lib/mysql
    skip_test_db: false
  when:
    - ansible_os_family | lower == 'archlinux' or
      ansible_distribution | lower | replace(' ', '') == 'artixlinux'

- name: run bootstrap on custom data directories '{{ mariadb_config_mysqld.datadir }}'
  mariadb_bootstrap:
    datadir: "{{ mariadb_config_mysqld.datadir }}"
    skip_test_db: false
  when:
    - mariadb_config_mysqld.datadir is defined
    - mariadb_config_mysqld.datadir != "/var/lib/mysql"

- name: start mariadb first time
  ansible.builtin.service:
    name: '{{ mariadb_service }}'
    state: started
  ignore_errors: true
  register: service_status
  notify:
    - check if mariadb are available

- name: detect error
  when:
    - service_status is defined
    - service_status.failed
    - ansible_service_mgr == 'systemd'
  block:
    - name: systemd unit
      ansible.builtin.debug:
        msg: "{{ service_status }}"

    - name: wait 2 seconds
      ansible.builtin.pause:
        seconds: 2

    - name: get journal log
      bodsch.core.journalctl:
        unit: "{{ mariadb_service }}"
        lines: 250
      register: mariadb_journal

    - name: journalctl output
      ansible.builtin.debug:
        msg: "{{ mariadb_journal.stdout }}"
      when:
        - mariadb_journal.stdout is defined

    - name: detect error log
      ansible.builtin.stat:
        path: "{{ mariadb_config_mysqld.log_error }}"
        register: stat_mariadb_error_log

    - name: load error_log
      ansible.builtin.slurp:
        src: "{{ mariadb_config_mysqld.log_error }}"
      register: mariadb_error_log
      when:
        - stat_mariadb_error_log.stat.exists

    - name: error_log output
      ansible.builtin.debug:
        msg: "{{ mariadb_error_log.content | b64decode }}"
      when:
        - stat_mariadb_error_log.stat.exists
        - mariadb_error_log.content is defined

- name: flush handlers
  ansible.builtin.meta: flush_handlers

...
