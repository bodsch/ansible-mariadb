---

- name: include OS specific configuration
  include_vars: "{{ lookup('first_found', params) }}"
  vars:
    params:
      paths:
        - "vars"
      files:
        # eg. debian-10 / ubuntu-20.04 / centos-8 / oraclelinux-8
        - "{{ ansible_distribution | lower }}-{{ ansible_distribution_major_version }}.yaml"
        # eg. debian / ubuntu / centos / oraclelinux
        - "{{ ansible_distribution | lower }}.yaml"
        # eg. redhat / debian
        - "{{ ansible_os_family | lower }}.yaml"
        - default.yaml
      skip: true

- name: merge mariadb configuration segment for server between defaults and custom
  set_fact:
    mariadb_config_server: "{{ mariadb_config_defaults_server |
      combine( mariadb_config_server, recursive=True ) }}"

- name: merge mariadb configuration segment for client between defaults and custom
  set_fact:
    mariadb_config_client: "{{ mariadb_config_defaults_client |
      combine( mariadb_config_client, recursive=True ) }}"

- name: merge mariadb configuration segment for mysql between defaults and custom
  set_fact:
    mariadb_config_mysql: "{{ mariadb_config_defaults_mysql |
      combine( mariadb_config_mysql, recursive=True ) }}"

- name: merge mariadb configuration segment for mysqld between defaults and custom
  set_fact:
    mariadb_config_mysqld: "{{ mariadb_config_defaults_mysqld |
      combine( mariadb_config_mysqld, recursive=True ) }}"

- name: merge mariadb configuration segment for mysqld_safe between defaults and custom
  set_fact:
    mariadb_config_mysqld_safe: "{{ mariadb_config_defaults_mysqld_safe |
      combine( mariadb_config_mysqld_safe, recursive=True ) }}"

- name: merge mariadb configuration segment for mysqldump between defaults and custom
  set_fact:
    mariadb_config_mysqldump: "{{ mariadb_config_defaults_mysqldump |
      combine( mariadb_config_mysqldump, recursive=True ) }}"

- name: merge mariadb configuration segment for galera between defaults and custom
  set_fact:
    mariadb_config_galera: "{{ mariadb_config_defaults_galera |
      combine( mariadb_config_galera, recursive=True ) }}"

- name: merge mariadb configuration segment for emmbedded between defaults and custom
  set_fact:
    mariadb_config_embedded: "{{ mariadb_config_defaults_embedded |
      combine( mariadb_config_embedded, recursive=True ) }}"

- name: merge mariadb custom configurations between defaults and custom
  set_fact:
    mariadb_config_custom: "{{ mariadb_config_defaults_custom |
      combine( mariadb_config_custom, recursive=True ) }}"

- name: make sure dnf is installed (only redhat based <7)
  package:
    name:
      - dnf
    state: present
  when:
    - ansible_os_family | lower == 'redhat'
    - ansible_distribution_version | int < 8

- name: ensure the ansible_python_interpreter is set to python2 (only redhat based <7)
  set_fact:
    ansible_python_interpreter: python2
  when:
    - ansible_os_family | lower == 'redhat'
    - ansible_distribution_version | int < 8

- name: detect python3
  stat:
    path: /usr/bin/python3
  register: python3_bin_present
  changed_when: not python3_bin_present.stat.exists

- name: ensure the ansible_python_interpreter is set to python3
  set_fact:
    ansible_python_interpreter: /usr/bin/python3
  when:
    - ansible_python.version.major == 2
    - python3_bin_present.stat.exists
    - ansible_os_family | lower == 'redhat'
    - ansible_distribution_version | int >= 8

- block:
    - name: add mariadb repository
      yum_repository:
        name: MariaDB
        state: present
        description: MariaDB {{ mariadb_version }} CentOS repository {{ ansible_distribution_major_version }} - amd64
        baseurl: http://yum.mariadb.org/{{ mariadb_version }}/centos{{ ansible_distribution_major_version }}-amd64
        gpgkey: https://yum.mariadb.org/RPM-GPG-KEY-MariaDB
        gpgcheck: 1
        enabled: 1

    - name: enable module_hotfixes
      ini_file:
        dest: /etc/yum.repos.d/MariaDB.repo
        section: MariaDB
        option: module_hotfixes
        value: "1"
        mode: 0750
  when:
    - mariadb_use_external_repo | bool
    - ansible_os_family | lower == 'redhat'

- block:
    # - name: update apt cache
    #   apt:
    #     update_cache: true
    #     cache_valid_time: 3600

    # - name: install requierements
    #   package:
    #     name: "{{ item }}"
    #     state: present
    #   loop:
    #     - software-properties-common
    #     - dirmngr

    - name: add apt signing key
      apt_key:
        url: https://mariadb.org/mariadb_release_signing_key.asc
        state: present

    - name: add mariadb repository for debian
      apt_repository:
        repo: "deb {{ mariadb_debian_repo }}/{{ mariadb_version }}/{{ ansible_os_family | lower }} {{ ansible_distribution_release | lower }} main"
        state: present
      when:
        - ansible_distribution | lower == 'debian'

    - name: add mariadb repository for ubuntu
      apt_repository:
        repo: "deb {{ mariadb_debian_repo }}/{{ mariadb_version }}/{{ ansible_distribution | lower }} {{ ansible_distribution_release | lower }} main"
        state: present
      when:
        - ansible_distribution | lower == 'ubuntu'

  when:
    - mariadb_use_external_repo | bool
    - ansible_os_family | lower == 'debian'

- name: update package cache
  package:
    update_cache: true
    cache_valid_time: 3600

- name: detect if mariadb installed
  stat:
    path: /usr/bin/mysqld_safe
  register: mysqld_binary_file

- name: detect if mariadb installed
  set_fact:
    mariadb_installed: "{{ mysqld_binary_file.stat.exists }}"
  when:
    - mysqld_binary_file is defined
    - mysqld_binary_file.stat is defined

# - debug:
#     msg:
#       - "{{ mysqld_binary_file }}"
#       - "{{ mariadb_installed }}"

- name: do facts module to get latest information
  setup:

...
