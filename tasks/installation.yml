---

- name: create policy-rc.d
  ansible.builtin.copy:
    dest: /usr/sbin/policy-rc.d
    content: |
      #!/bin/sh
      exit 101
    mode: "0755"
  when:
    - not mariadb_installed
    - ansible_os_family | lower != 'archlinux'

- name: ensure mariadb packages are installed
  ansible.builtin.package:
    name: "{{ mariadb_packages }}"
    state: present
  register: mariadb_install_packages

- name: create directory for pid file '{{ mariadb_config_mysqld.pid_file | dirname }}'
  ansible.builtin.file:
    path: "{{ mariadb_config_mysqld.pid_file | dirname }}"
    state: directory
    owner: mysql
    group: mysql
    mode: "0775"
  when:
    - mariadb_config_mysqld.pid_file is defined
    - mariadb_config_mysqld.pid_file | string | length > 0

- name: handle debian specific tasks
  when:
    - ansible_os_family | lower == 'debian'
  block:
    - name: fix debian specific debian-start file
      ansible.builtin.template:
        src: etc/mysql/debian-start.j2
        dest: "{{ mariadb_config_dir }}/debian-start"
        mode: "0755"

    - name: detect mysql apparmor prifile
      ansible.builtin.stat:
        path: /etc/apparmor.d/usr.sbin.mysqld
      register: apparmor_mysql_profile

    - name: apparmor stuff
      when:
        - apparmor_mysql_profile.stat.exists
      block:
        - name: create apparmor disable directory
          ansible.builtin.file:
            path: /etc/apparmor.d/disable
            state: directory
            mode: "0755"

        - name: disable profile
          ansible.builtin.file:
            src: /etc/apparmor.d/usr.sbin.mysqld
            dest: /etc/apparmor.d/disable/usr.sbin.mysqld
            mode: "0755"
            state: link
            force: true

        - name: reload apparmor
          ansible.builtin.command: |
            apparmor_parser -R /etc/apparmor.d/usr.sbin.mysqld
          register: apparmor
          changed_when: apparmor.rc != 0
          failed_when: apparmor.rc != 0
          ignore_errors: true

        - name: apparmor status
          ansible.builtin.command: |
            aa-status
          register: apparmor
          changed_when: apparmor.rc != 0
          failed_when: apparmor.rc != 0
          ignore_errors: true

- name: remove policy-rc.d
  ansible.builtin.file:
    path: /usr/sbin/policy-rc.d
    state: absent
  when:
    - ansible_os_family | lower != 'archlinux'

- name: create custom fact file
  bodsch.core.facts:
    name: mariadb
    facts:
      version: "{{ mariadb_version }}"
      short_version: "{{ mariadb_short_version }}"
      full_version: "{{ package_version.available.full_version }}"
      platform_version: "{{ package_version.available.platform_version }}"

- name: python support
  when:
    - mariadb_python_packages is defined
    - mariadb_python_packages | length > 0
  block:
    - name: create pip requirements file
      bodsch.core.pip_requirements:
        name: mariadb
        requirements: "{{ mariadb_python_packages }}"
      register: pip_requirements

    - name: fail if pip not installed
      ansible.builtin.fail:
        msg: python pip is not installed
      when:
        - not pip_requirements.pip.present

    - name: install python packages  # noqa no-handler
      ansible.builtin.pip:
        state: present
        requirements: "{{ pip_requirements.requirements_file }}"
        extra_args: "{{ mariadb_python_extra_args | default([]) | bodsch.core.python_extra_args(python_version=ansible_python.version) | default(omit) }}"
      register: pip_install
      ignore_errors: true
      no_log: true
      when:
        - pip_requirements.requirements_file is defined
        - pip_requirements.changed

    - name: first run is failed, try with build
      when:
        - pip_install is defined
        - pip_install.failed is defined
        - pip_install.failed
        - mariadb_build_packages | default([]) | count > 0
      block:
        - name: install build essentials
          ansible.builtin.package:
            name: "{{ mariadb_build_packages }}"
            state: present

        - name: ensure python bindings for mariadb packages 2nd
          ansible.builtin.pip:
            state: present
            requirements: "{{ pip_requirements.requirements_file }}"
            extra_args: "{{ mariadb_python_extra_args | default([]) | bodsch.core.python_extra_args(python_version=ansible_python.version) | default(omit) }}"
          register: pip_install
          ignore_errors: false

        - name: uninstall build essentials
          ansible.builtin.package:
            name: "{{ mariadb_build_packages }}"
            state: absent

  rescue:
    - name: remove pip requirements
      bodsch.core.pip_requirements:
        name: mariadb
        requirements: "{{ mariadb_python_packages }}"
        state: absent

    - name: pip requirements installation failed
      ansible.builtin.fail:
        msg: "{{ pip_install.msg }}"
      when:
        - pip_install.failed

- name: install mysqltuner
  ansible.builtin.get_url:
    url: "https://raw.githubusercontent.com/major/MySQLTuner-perl/master/{{ item.name }}"
    dest: "/usr/local/bin/{{ item.name }}"
    mode: "{{ item.mode }}"
  register: _download_mysqltuner
  until: _download_mysqltuner is succeeded
  retries: 5
  delay: 2
  check_mode: false
  loop:
    - name: mysqltuner.pl
      mode: "0750"
    - name: basic_passwords.txt
      mode: "0640"
    - name: vulnerabilities.csv
      mode: "0640"
  loop_control:
    label: "{{ item.name }}"
  when:
    - mariadb_mysqltuner

...
